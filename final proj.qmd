---
title: "FinalProjRBootcamp"
author: "Caroline Ponticelli"
format: html
editor: visual
execute: 
  cache: false
  echo: false
---

```{r}
library(gtsummary)
library(tidyverse)
library(here)
library(scales)
library(readr)
library(dplyr)
library(readxl)
library(renv)
library(lubridate)
library(broom)


adopt <- read_excel(here::here("Finalproj", "data", "shelterreportdata.xlsx"))
```

Renv

```{r}
renv::init()

renv::status()

#my lock file has all the librarys needed
```

Only data for dogs and certain variables.

```{r}
columns_to_drop <- c(3, 6, 8, 10, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35)

# Drop the specified columns to make a data set with just dog data
adopt_subset <- adopt[, -columns_to_drop]

```

I only want the shelters that have complete reports. meaning all 37 months they have data even if they have data for the month in question

```{r}
shelter_counts <- adopt_subset %>%
  group_by(`Shelter Name`) %>%
  summarize(count = n())

shelters_to_keep <- shelter_counts %>%
  filter(count == 37) %>%
  pull(`Shelter Name`)

completeadopt <- adopt_subset %>%
  filter(`Shelter Name` %in% shelters_to_keep)

```

I want to just have data for a month 2023-07-01

```{r}
adopt_subset1 <- mutate(completeadopt, YEAR = year(ymd(`Report Period Start`)))

adoptJuly2023 <- adopt_subset1 %>%
  filter(`Report Period Start` == ymd("2023-07-01"))

columns_to_drop1 <- c(1, 2)
final1 <- adoptJuly2023[, -columns_to_drop1]

```

This data is from all the the animal shelters in Georgia, sourced from the Georgia Department of Agriculture. 

Table 1

```{r}
#| table1: tbl-one
#| label: tbl-one
#| tbl-cap: "Table 1: Dog Shelter Statistics"

table1<- gtsummary::tbl_summary(
  final1,
  by = 'Shelter Name',
  include= c(`Shelter Name`, starts_with('Canine'), YEAR)) |>
	 add_overall(col_label = "**Total**")
	

table1

```

As you can see in @tbl-one there are 81 shelters with complete reporting data.\
The reporting periods were originally by month over \~3 years. Now it is just counts for the different shelters over 1 month period - the most recent month of July.

Figure 1:

```{r}
#| Figure1: fig-hist
#| label: fig-hist
#| fig-cap: "Figure 1: Counts of Dog adoptions"

hist(final1$`Canine adoption`, main= "Histogram: Counts of Dog Adoptions")

abline(v = mean(final1$'Canine adoption'), col= 'blue', lwd = 4)

mtext("Shows the distribution of dog adoption counts, the blue line is the MEAN", side = 1, line = 4)


```

@fig-hist contains a histogram and @tbl-one a table

My function to do something with the data.
```{r}
#if numbers are greater then 5 say yes if not than say no 


cpfunc1 <- function(data, row_name) {
  rowvalue <- data[[row_name]]
  if (all(rowvalue >= 5)) {
    return('yes')
  } else {
    return('no')
  }
}

cpfunc1(final1, 'Canine adoption')

print(cpfunc1(final1, 'Canine adoption'))
```


Table 2: Regression

```{r}
#| table2: tbl-two
#| label: tbl-two
#| tbl-cap: "Table 2: Poisson Regression Dog Shelter Statistics"

final1 <- rename(final1, Canine_adoption = `Canine adoption`,
                 Canine_starting_animal_count = `Canine starting animal count`,
                 Canine_returned_to_owner = `Canine returned to owner`)

tbl2 <- tbl_uvregression(
  method = glm,
  y = 'Canine_adoption',
  include = c('Canine_starting_animal_count', 'Canine_returned_to_owner'),
  data = final1,
  family = poisson()
)

tbl2



```


As you can see in @tbl-two, both confidence intervals are significant with Canine_starting_animal_count of `r gtsummary::inline_text(tbl2, variable = "Canine_starting_animal_count")` and Canine returned to owner of `r gtsummary::inline_text(tbl2, variable = "Canine_returned_to_owner")`. 

